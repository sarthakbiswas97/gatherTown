
// join space
// socket connection -> validation for user and space existence -> joins space -> inform the user and all the users
// for each new connection store -> which user joined (userId) -> which space (spaceId)
// for each space keep the dimensions handy (spaceDimensions)
// keep the users initial position handy (userPosition)

// handle moves
// boundary check
// move should not be more than 1 distance and diagonally
// if the distance is a perfect number than its a possible move 
// if the ditance from current to the future position is an imaginary/non-perfect sq. no. then reject the move
// if inside bound and all checks then move otherwise reject move



//before leaving store the current positins in db -> 
// will remove the user from the space array 
// and clear all the in memory spaces
// and close the connection for that user 